# https://game.ci/docs/github/builder#complete-example
name: Build project

on: 
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build'
        required: true
        type: choice
        default: 'WebGL'
        options:
          - WebGL
          - StandaloneWindows64
          - StandaloneOSX
          - All

env:
  PROJECT_PATH: './src/LDJam58'

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: 
          - ${{ inputs.platforms == 'All' && 'WebGL' || inputs.platforms }}
          - ${{ inputs.platforms == 'All' && 'StandaloneWindows64' || null }}
          - ${{ inputs.platforms == 'All' && 'StandaloneOSX' || null }}
        exclude:
          - targetPlatform: null

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: ./.github/actions/setup-environment

      - uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }} # For personal licenses
          # UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }} # For professional licenses
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 7

      - name: Create release tag
        if: github.ref == 'refs/heads/main'
        run: |
          TAG_NAME="build-$(date +'%Y%m%d-%H%M%S')-${SHORT_SHA}"
          echo "Creating tag: $TAG_NAME"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "BUILD_TAG=$TAG_NAME" >> $GITHUB_ENV
          echo "::notice title=Build Tag Created::Tag $TAG_NAME created for build artifacts"
