name: Deploy To Itch.io

run-name: Deploy '${{ inputs.tag }}' ${{ inputs.channel }} to Itch.io requested by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: The build version to be deployed (e.g., v19)
        required: true
        default: latest
      channel:
        description: The platform channel to be deployed (ignored if tag is specific)
        required: true
        type: choice
        options:
          - WebGL
          - StandaloneWindows64
          - StandaloneOSX
          # - StandaloneWindows
          # - StandaloneLinux64
          # - iOS
          # - Android

env:
  RELEASE_TAG: ${{ inputs.tag }}
  CHANNEL: ${{ inputs.channel }}

jobs:
  deploy:
    name: Deploy to itch.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-environment

      - name: Resolve tag
        id: resolve-tag
        run: |
          if [ "${{ inputs.tag }}" = "latest" ]; then
            LATEST_TAG=$(git tag --sort=-version:refname | grep "\-${{ inputs.channel }}$" | head -n 1)
            echo "ARTIFACT_NAME=$LATEST_TAG" >> $GITHUB_ENV
            echo "Using latest build tag for ${{ inputs.channel }}: $LATEST_TAG"
          else
            echo "ARTIFACT_NAME=${{ inputs.tag }}" >> $GITHUB_ENV
            echo "Using specified tag: ${{ inputs.tag }}"
          fi

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/${{ inputs.channel }}

      - name: Upload to itch.io
        uses: robpc/itchio-upload-action@v1
        with:
          path: build/${{ inputs.channel }}
          project: ${{ env.ITCH_IO_PROJECT }}/${{ env.PROJECT_NAME }}
          channel: ${{ inputs.channel }}
          version: ${{ env.ARTIFACT_NAME }}
          api-key: ${{ secrets.ITCH_IO_API_KEY }}
